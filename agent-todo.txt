1. set up edge functions
2. Basic AI response (? maybe not needed)
3. Chunking and embedding help articles (need new table, not agent)
4. Help agent

NEED TO REWRITE THE HELP AGENT IN LANGGRAPH


curl -X POST http://localhost:54321/functions/v1/helpAgent -H "Content-Type: application/json" -d '{"ticketId": "test-123", "userMessage": "test message"}'

Help Agent
    1. customer sends a message in the help chat
    2. The ticket is created in the database (happens in app)
    3. If the ticket has a placeholder title, the agent recognizes it and creates a title (tool 1)
    4. The agent updates the description of the ticket, happens on creation or subseqent messages if appropriate (tool 2)
    5. The agent determines if a new employee needs to be assigned (either no employee, or the user asks for someone else to be assigned) (tool 3)
    6. The agent determines if the status/priority of the ticket needs to be updated (tool 4)
    7. The agent can send a message to the ticket comments for employee (tool 5)
    8. The agent sends a message back to the customer, tells them what they have done and suggests an article (tool 6)
    9. make sure that the activity log is updated for any of these tool calls

TODO HELP AGENT
    x make sure final response is recorded in langsmith
        x only shows tools, not the final output
    x modify the ticket creation to name the ticket "new ticket", maybe make sure agent always updates the name if it is "new ticket"
        x also make sure the description is null when created
    x check on double sending of messages (only one message should go to the ticket_conversations table)
        x I think it is because the agent uses a tool (respondToCustomer) to send a message to the ticket_conversations for replying to the customer
        x remove the respondToCustomer tool, refactor main prompt to make sure the final output is formatted like the client response message
        x then also the response itself from the final agent output is sent to the ticket conversation table
    x make sure it only sends an appropriate response to the customer
    x make it pull the ticket_history table to get any relevant updates
    x make sure it knows that it should always send an update in the ticket_comments table to the internal team
    x get it to properly format the ticket updates
        x might have to totally refactor the ticket_history table
        x at least get the ticket activity panel to show the name as AI
    x use rag to find knowledge base articles
        x rag to find the articleId
        x use the articleId to get the article from the database
        x tell the user the article title
    x some kind of loading indicator in the help chat
        x clear the text area, but don't clear the messages
        x when the agent is done, and you get the response, show it in the message area
    x format response to customer to be more natural
    - speed up the agent
    - maybe need to change the way the agent reads the user message

Testing results
    - Tokens
    - latency
    - correct actions
brainlift

Knowledge base (not an agent)
    1. When an article is created or updated, the document is chunked and embedded


Analysis Agent (agent)
    1. Admin can send a message to an analysis agent chat (1 component/table)
    2. The agent looks at the admin message, and analyzes schema to generate a plain text query (1 tool)
    3. The agent converts the plain text query to a sql query (2 tools)
    4. The agent analyzes the returned data and generates a response (3 tools)
    5. The agent responds to the admin